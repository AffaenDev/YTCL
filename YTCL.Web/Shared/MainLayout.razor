@inherits LayoutComponentBase
@inject Microsoft.JSInterop.IJSRuntime JSRuntime

<div class="page @(_isDarkMode ? "dark-mode" : "light-mode")">
    <div class="sidebar @(showSidebar ? "open" : "")">
        <NavMenu ShowSidebar="showSidebar" OnToggleSidebar="ToggleSidebar" />
    </div>

    <main>
        <div class="top-row px-4">
            <button class="hamburger-btn" @onclick="ToggleSidebar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <div class="search-container">
                <input type="text" class="search-input" placeholder="Search videos..." @bind="searchQuery" @bind:event="oninput" @onkeyup="HandleSearch" />
                <button class="search-button" @onclick="Search"><i class="bi bi-search"></i></button>
            </div>
            <div class="theme-toggle">
                <button @onclick="ToggleTheme" class="btn btn-sm">
                    @if (_isDarkMode)
                    {
                        <i class="bi bi-sun-fill"></i>
                    }
                    else
                    {
                        <i class="bi bi-moon-fill"></i>
                    }
                </button>
            </div>
            <div class="auth-buttons">
                <AuthorizeView>
                    <Authorized Context="authContext">
                        <div class="dropdown">
                            <button class="btn dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                <img src="@authContext.User.FindFirst("picture")?.Value" alt="Profile" class="profile-pic" />
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" href="profile">Profile</a></li>
                                <li><a class="dropdown-item" href="upload">Upload Video</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><a class="dropdown-item" href="logout">Logout</a></li>
                            </ul>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <button class="btn btn-outline-primary me-2" @onclick="Login">Login</button>
                        <button class="btn btn-primary" @onclick="Register">Register</button>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool _isDarkMode = true;
    private string searchQuery = "";
    private bool showSidebar = false;

    protected override async Task OnInitializedAsync()
    {
        // Rimosso: la chiamata JS interop non pu√≤ essere qui in Blazor Server
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var storedTheme = await JSRuntime.InvokeAsync<string>("localStorage.getItem", new object[] { "themePreference" });
            _isDarkMode = storedTheme == "dark";
            StateHasChanged();
        }
    }

    private async Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", new object[] { "themePreference", _isDarkMode ? "dark" : "light" });
    }

    private void HandleSearch(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Search();
        }
    }

    private void Search()
    {
        // Implement search functionality
        Console.WriteLine($"Searching for: {searchQuery}");
    }

    private void Login()
    {
        // Implement login functionality
    }

    private void Register()
    {
        // Implement register functionality
    }

    private void ToggleSidebar()
    {
        showSidebar = !showSidebar;
    }
}